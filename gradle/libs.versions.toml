[versions]
# android project
androidGradlePlugin = "8.1.1"
targetSdk = "33"
minSdk = "23"
compileSdk = "34"
# project uses java version
jvmVersion = "17"
# kotlin specific
# ksp version: see
kotlin = "1.9.22"
ksp = "1.9.22-1.0.17"
kotlinxCoroutines = "1.7.3"
kotlinxSerialization = "1.6.0"
ktlint = "0.49.1"
# kotlin server-side
ktor = "2.3.4"
ktorfit = "1.6.0"
# androidx
androidxCore = "1.12.0"
androidDesugarJdkLibs = "2.0.3"
androidxLifecycle = "2.6.2"
androidxActivity = "1.8.2"
androidxFragment = "1.6.2"
androidxSplashScreen = "1.0.1"
androidxLifecycleProcess = "2.6.2"
# compose version
# for updating Kotlin and Compose Compiler version, see:
# https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-compatibility-and-versioning.html#kotlin-compatibility
# https://developer.android.com/jetpack/androidx/releases/compose-kotlin?#pre-release_kotlin_compatibility
composeBom = "2023.10.01"
composeCompiler = "1.5.8"
composeJb = "1.5.0"
composeMaterial3 = "1.2.0-alpha07"
composeHiltNavigatiaon = "1.0.0"
composeWear = "1.2.1"
# compose additional library version: accompanist=mobile, horologist=wear
# https://google.github.io/accompanist/
# https://google.github.io/horologist/
accompanist = "0.30.1"
horologist = "0.5.0"
# test
junit = "4.13.2"
androidxTestExt = "1.1.5"
androidxTestEspresso = "3.5.1"
showkase = "1.0.0-beta18"
roborazzi = "1.6.0-alpha-3"
# di
dagger = "2.48"
koin = "3.4.3"
# firebase and google services
firebaseBom = "32.7.1"
multiplatformFirebase = "1.8.1"
kermit = "1.2.2"
okHttp = "4.11.0"
ossLicensesPlugin = "0.10.6"
ossLicenses = "17.0.1"
playServicesWearable = "18.1.0"
# gradle convention
gradleVersionUp = "0.51.0"
versionCatalogUpdate = "0.8.4"
dependencyAnalysis = "1.29.0"
# db
room = "2.6.0"
# others

[libraries]
# gradle library (pluginsで読み込みに使うidではなく、gradle plugin portalに登録されている完全修飾名を使う)
# (自作プラグインで読み込むために、対象のプラグインにアクセスする必要があるため)
# 同時にbundle pluginsにも追加する必要がある
androidGradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
kotlinGradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
composeJbGradlePlugin = { group = "org.jetbrains.compose", name = "compose-gradle-plugin", version.ref = "composeJb" }
hiltGradlePlugin = { group = "com.google.dagger", name = "hilt-android-gradle-plugin", version.ref = "dagger" }
roborazziGradlePlugin = { group = "io.github.takahirom.roborazzi", name = "roborazzi-gradle-plugin", version.ref = "roborazzi" }
kspGradlePlugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
firebaseGradlePlugin = { module = "com.google.gms:google-services", version = "4.4.0" }
firebaseCrashlyticsGradlePlugin = { module = "com.google.firebase:firebase-crashlytics-gradle", version = "2.9.9" }
ktorfitGradlePlugin = { module = "de.jensklingenberg.ktorfit:gradle-plugin", version = "1.0.0" }
kotlinxSerializationGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
completeKotlinPlugin = { module = "com.louiscad.complete-kotlin:plugin", version = "1.1.0" }
ossLicensesPlugin = { group = "com.google.android.gms", name = "oss-licenses-plugin", version.ref = "ossLicensesPlugin" }
gradleVersionUpGradlePlugin = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradleVersionUp" }
versionCatalogUpdatePlugin = { module = "nl.littlerobots.vcu:plugin", version.ref = "versionCatalogUpdate" }
dependencyAnalysisPlugin = { module = "com.autonomousapps:dependency-analysis-gradle-plugin", version.ref = "dependencyAnalysis" }
# android specific
androidDesugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }

# DI
daggerHiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
daggerHiltAndroidTesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "dagger" }
daggerHiltAndroidCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger" }
androidxLifecycleProcess = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "androidxLifecycleProcess" }
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
# kotlin
kotlinxCoroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kotlinxCollectionsImmutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.5" }
kotlinxDatetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.4.0" }
kotlinxAtomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version = "0.22.0" }
# kotlin server-side
ktorfitLib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit" }
ktorfitKsp = { module = "de.jensklingenberg.ktorfit:ktorfit-ksp", version.ref = "ktorfit" }
# UI
composeBom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
composeRuntime = { module = "androidx.compose.runtime:runtime" }
composeUi = { module = "androidx.compose.ui:ui" }
composeUiUtil = { module = "androidx.compose.ui:ui-util" }
composeUiTooling = { module = "androidx.compose.ui:ui-tooling" }
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }
composeAnimation = { module = "androidx.compose.animation:animation" }
composeAnimationGraphics = { module = "androidx.compose.animation:animation-graphics" }
composeMaterial = { module = "androidx.compose.material:material" }
composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
composeMaterialWindowSize = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "composeMaterial3" }
composeMaterialIcon = { module = "androidx.compose.material:material-icons-extended" }
androidxActivityActivityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
composeUiTestManifest = { module = "androidx.compose.ui:ui-test-manifest" }
composeUiTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4" }
composeNavigation = { module = "androidx.navigation:navigation-compose", version = "2.7.2" }
composeHiltNavigtation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "composeHiltNavigatiaon" }
composeLintCheck = { module = "com.slack.lint.compose:compose-lint-checks", version = "1.2.0" }
composeCoil = { module = "io.coil-kt:coil-compose", version = "2.4.0" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version = "1.6.7" }
animation-graphics-android = { group = "androidx.compose.animation", name = "animation-graphics-android", version = "1.5.1" }
# wear compose
wearComposeUiTooling = { module = "androidx.wear.compose:compose-ui-tooling", version.ref = "composeWear" }
wearComposeFoundation = { group = "androidx.wear.compose", name = "compose-foundation", version.ref = "composeWear" }
wearComposeMaterial = { module = "androidx.wear.compose:compose-material", version.ref = "composeWear" }
wearComposeMaterial3 = { module = "androidx.wear.compose:compose-material3", version.ref = "composeWear" }
# androidx
androidxActivity = { module = "androidx.activity:activity-ktx", version.ref = "androidxActivity" }
androidxFragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidxFragment" }
androidxCoreKtx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidxAppCompat = { module = "androidx.appcompat:appcompat", version = "1.7.0-alpha03" }
androidxLifecycleLifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidxDatastoreDatastorePreferences = { module = "androidx.datastore:datastore-preferences-core", version = "1.1.0-alpha04" }
androidxBrowser = { module = "androidx.browser:browser", version = "1.6.0" }
androidxWindow = { module = "androidx.window:window", version = "1.1.0" }
androidxSplashScreen = { module = "androidx.core:core-splashscreen", version.ref = "androidxSplashScreen" }

# Data
kotlinSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorClientOkHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktorClientDarwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktorKotlinxSerialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktorContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
# DB
roomGradlePlugin = { module = "androidx.room:androidx.room.gradle.plugin", version.ref = "room" }
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }
roomTesting = { module = "androidx.room:room-testing", version.ref = "room" }
roomPaging = { module = "androidx.room:room-paging", version.ref = "room" }
# other
javaPoet = { module = "com.squareup:javapoet", version = "1.13.0" }
okHttpCore = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
okHttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
okIo = { module = "com.squareup.okio:okio", version = "3.5.0" }

# firebase / google play services
firebaseBom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebaseCommon = { module = "com.google.firebase:firebase-common" }
firebaseAuth = { module = "com.google.firebase:firebase-auth" }
firebaseDynamicLinks = { module = "com.google.firebase:firebase-dynamic-links" }
multiplatformFirebaseAuth = { module = "dev.gitlive:firebase-auth", version.ref = "multiplatformFirebase" }
firebaseRemoteConfig = { module = "dev.gitlive:firebase-config", version.ref = "multiplatformFirebase" }
firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx", version = "18.4.1" }
play-services-wearable = { group = "com.google.android.gms", name = "play-services-wearable", version.ref = "playServicesWearable" }
ossLicenses = { module = "com.google.android.gms:play-services-oss-licenses", version.ref = "ossLicenses" }

# Test
junit = { module = "junit:junit", version.ref = "junit" }
androidxTestExtJunit = { module = "androidx.test.ext:junit", version.ref = "androidxTestExt" }
androidxTestEspressoEspressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxTestEspresso" }
robolectric = { module = "org.robolectric:robolectric", version = "4.10.3" }
roborazzi = { module = "io.github.takahirom.roborazzi:roborazzi", version.ref = "roborazzi" }
roborazziCompose = { module = "io.github.takahirom.roborazzi:roborazzi-compose", version.ref = "roborazzi" }
roborazziRule = { module = "io.github.takahirom.roborazzi:roborazzi-junit-rule", version.ref = "roborazzi" }
showkaseRuntime = { group = "com.airbnb.android", name = "showkase", version.ref = "showkase" }
showkaseProcessor = { group = "com.airbnb.android", name = "showkase-processor", version.ref = "showkase" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

[plugins]
# rootでaliasで設定するものをここで指定（aliasでpluginを読み込まない場合は必要ない）
# jp.gcreate.XXX（自作プラグイン）を適用する場合はいらない
androidGradlePlugin = { id = "com.android.application", version.ref = "androidGradlePlugin" }
androidGradleLibraryPlugin = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlinGradlePlugin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
hiltGradlePlugin = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }
roborazziGradlePlugin = { id = "io.github.takahirom.roborazzi", version.ref = "roborazzi" }
kspGradlePlugin = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ossLicensesPlugin = { id = "com.google.android.gms.oss-licenses-plugin", version.ref = "ossLicensesPlugin" }
gradleVersionUpPlugin = { id = "com.github.ben-manes.versions", version.ref = "gradleVersionUp" }
versionCatalogUpdatePlugin = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdate" }
dependencyAnalysisPlugin = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysis" }

[bundles]
# 自作pluginで参照するのに利用する
# pluginsでのid指定では参照できないので、moduleで指定する
# moduleの指定方法が書いてない場合がほとんどなので、gradle plugin portalでidで検索すればわかる
plugins = [
    "androidGradlePlugin",
    "kotlinGradlePlugin",
    "hiltGradlePlugin",
    "composeJbGradlePlugin",
    "roborazziGradlePlugin",
    "kspGradlePlugin",
    "roomGradlePlugin",
    "firebaseGradlePlugin",
    "ktorfitGradlePlugin",
    "kotlinxSerializationGradlePlugin",
    "completeKotlinPlugin",
    "ossLicensesPlugin",
    "firebaseCrashlyticsGradlePlugin",
    "gradleVersionUpGradlePlugin",
    "versionCatalogUpdatePlugin",
    "dependencyAnalysisPlugin",
]
